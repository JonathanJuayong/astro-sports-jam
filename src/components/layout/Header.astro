---
import type { Link } from '../../types'
import Button from '../Button.astro'

interface Props {
  links: Link[]
}

const { links } = Astro.props
---

<section class="relative">
  <nav class="py-6 bg-white z-50">
    <div class="container px-4 mx-auto">
      <div class="flex items-center relative">
        <a class="inline-block text-lg font-bold" href="/">SPORTS JAM</a>
        <div class="xl:hidden ml-auto">
          <button
            class="navbar-burger flex w-12 h-12 items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-md transition duration-200"
          >
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3 12H21"
                stroke="black"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M3 6H21"
                stroke="black"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M3 18H21"
                stroke="black"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </button>
        </div>
        <ul
          class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 hidden xl:flex lg:w-auto lg:space-x-12"
        >
          {
            links.map(({ label, href }) => (
              <li>
                <a
                  class="inline-block text-sm text-gray-900 hover:text-orange-900 font-medium"
                  href={href}
                >
                  {label}
                </a>
              </li>
            ))
          }
        </ul>
        <Button
          class="xl:block hidden ml-auto"
          text="Join the Jam"
          isAnchor
          href="#"
        />
      </div>
    </div>
  </nav>
  <div
    class="navbar-backdrop hidden fixed inset-0 w-screen h-screen z-10 bg-gray-800 opacity-25"
  >
  </div>
  <div
    class="xl:hidden navbar-menu transition-all ease-in -translate-x-full fixed inset-0 w-5/6 max-w-md z-50"
    id="mobile-nav"
  >
    <nav
      class="navbar-drawer relative flex flex-col py-6 px-10 w-full h-full bg-white border-r overflow-y-auto"
    >
      <div class="flex items-center mb-16">
        <button class="navbar-close">
          <svg
            class="h-6 w-6 text-gray-500 cursor-pointer hover:text-gray-500"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div>
        <ul class="mb-2">
          {
            links.map(({ label, href }) => (
              <li>
                <a
                  class="block py-4 px-5 text-gray-900 hover:bg-orange-50 rounded-lg"
                  href={href}
                >
                  {label}
                </a>
              </li>
            ))
          }
        </ul>
        <Button class="block px-6 my-16" text="Join the Jam" />
      </div>
    </nav>
  </div>
</section>

<script>
  const navbarBurger = document.querySelector(
    '.navbar-burger',
  ) as HTMLButtonElement
  const navbarClose = document.querySelector(
    '.navbar-close',
  ) as HTMLButtonElement

  const mobileNav = document.getElementById('mobile-nav') as HTMLDivElement
  const mobileNavbarDrawer = document.querySelector(
    '.navbar-drawer',
  ) as HTMLDivElement
  const mobileNavbarBackdrop = document.querySelector(
    '.navbar-backdrop',
  ) as HTMLDivElement

  function openMobileNavMenu() {
    mobileNavbarBackdrop.style.display = 'block'
    mobileNav.style.transform = 'translate(0)'
  }
  function closeMobileNavMenu() {
    mobileNavbarBackdrop.style.display = 'none'
    mobileNav.style.transform = 'translate(-100%)'
  }

  mobileNavbarBackdrop.addEventListener('click', closeMobileNavMenu)

  navbarBurger.addEventListener('click', () => {
    openMobileNavMenu()
  })

  navbarClose.addEventListener('click', () => {
    closeMobileNavMenu()
  })
</script>
